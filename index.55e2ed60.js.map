{"mappings":"YAqFA,IAAMA,EAAcC,SAASC,iBAAiB,uBACxCC,EAAcF,SAASG,cAAc,wBAE3C,SAASC,EAAkBC,GACzB,IAAIC,EAASD,EAAEC,OACO,UAAlBD,EAAEC,OAAOC,OACXD,EAASN,SAASQ,eAAe,UAEnC,IAAMC,EAAMH,EAAOG,IACbC,EAAMJ,EAAOI,IACbC,EAAML,EAAOM,MAEnBN,EAAOO,MAAMC,eAAgC,KAAbH,EAAMF,IAAeC,EAAMD,GAAO,Q,CAGpEV,EAAYgB,SAAQ,SAAAC,GAClBA,EAAMC,iBAAiB,QAASb,E,IAGlCF,EAAYe,iBAAiB,QAASb,E","sources":["src/index.js"],"sourcesContent":["// Что означает 4-й пункт «Карта может быть отзывами.»?\n// Под картой есть интерактивная шкала времени в виде «колонок»:\n// Каждое деление соответствует дате (от)\n// Статистика слева — это количество преступлений (affected_number) на текущую дату с разбивкой по категориям (affected_type).\n// Высота столбца зависит от количества преступлений (affected_number) за период и должна рассчитываться в соответствии с данными.\n// Карта может быть ответами.\n// Мы показываем 100 делений на временной шкале. Берем последние 100.\n\n//Sample dates\n// const textEl = document.getElementById('.frame-text');\n\n// const inputEl = document.getElementById('.frame-scale');\n\n// inputEl.addEventListener('input', e => {\n//   const place = inputEl.value;\n// console.log(size);\n\n// textEl.style.fontSize = place + 'px';\n//   textEl.style.transform = 'translateX(' + Math.min(progress / 10, 200) + 'px)';\n// });\n// =============================\n// animation\n// const animationBox = document.querySelector('.box_for_animation');\n// const animationButton = document.querySelector('.button_for_animation');\n\n// let animationStart;\n// let requestId;\n\n// function animate(timestamp) {\n//   if (!animationStart) {\n//     animationStart = timestamp;\n//   }\n\n//   const progress = timestamp - animationStart;\n\n//   animationBox.style.transform = `translateX(${progress / 5}px)`;\n\n//   const x = animationBox.getBoundingClientRect().x + 100;\n\n//   // 6px - scrollbar width\n//   if (x <= window.innerWidth - 6) {\n//     window.requestAnimationFrame(animate);\n//   } else {\n//     window.cancelAnimationFrame(requestId);\n//   }\n// }\n\n// function startAnimation() {\n//   requestId = window.requestAnimationFrame(animate);\n//   animationButton.style.opacity = 0;\n// }\n\n// animationButton.addEventListener('click', startAnimation, { once: true });\n\n// scroll\n// const scrollMessage = document.querySelector('.message_for_scroll');\n// const scrollBox = document.querySelector('.box_for_scroll');\n\n// function showMessage() {\n//   if (!scrollMessage.textContent) {\n//     scrollMessage.textContent = 'scrollBox is in viewport';\n//     scrollMessage.style.opacity = 1;\n//   }\n// }\n\n// function onScroll() {\n//   const { top, bottom } = scrollBox.getBoundingClientRect();\n\n//   if (top < window.scrollY && bottom > 0) {\n//     window.requestAnimationFrame(showMessage);\n//   } else if (scrollMessage.textContent) {\n//     scrollMessage.style.opacity = 0;\n//     const timerId = setTimeout(() => {\n//       scrollMessage.textContent = '';\n//       clearTimeout(timerId);\n//     }, 500);\n//   }\n// }\n\n// window.addEventListener('scroll', onScroll);\n\n// const serverJson = JSON.stringify('./events.json');\n// const getJson = JSON.parse(serverJson);\n\n// console.log(getJson);\nconst rangeInputs = document.querySelectorAll('input[type=\"range\"]');\nconst numberInput = document.querySelector('input[type=\"number\"]');\n\nfunction handleInputChange(e) {\n  let target = e.target;\n  if (e.target.type !== 'range') {\n    target = document.getElementById('range');\n  }\n  const min = target.min;\n  const max = target.max;\n  const val = target.value;\n\n  target.style.backgroundSize = ((val - min) * 100) / (max - min) + '% 100%';\n}\n\nrangeInputs.forEach(input => {\n  input.addEventListener('input', handleInputChange);\n});\n\nnumberInput.addEventListener('input', handleInputChange);\n"],"names":["$b8f9b7833fa37166$var$rangeInputs","document","querySelectorAll","$b8f9b7833fa37166$var$numberInput","querySelector","$b8f9b7833fa37166$var$handleInputChange","e","target","type","getElementById","min","max","val","value","style","backgroundSize","forEach","input","addEventListener"],"version":3,"file":"index.55e2ed60.js.map"}